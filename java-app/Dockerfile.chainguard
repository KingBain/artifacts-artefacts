# Multi-stage build with Chainguard images
FROM artifacts-artefacts.devops.cloud-nuage.canada.ca/docker-chainguard-remote/ssc-spc.gc.ca/jdk:openjdk-24.0.1 AS builder

WORKDIR /app

# Copy Maven wrapper files first (for better layer caching)
COPY mvnw .
COPY mvnw.cmd .
COPY .mvn .mvn

# Copy Maven configuration
COPY pom.xml .

# Download dependencies (this layer will be cached if pom.xml doesn't change)
RUN sh mvnw dependency:go-offline -B

# Copy source code
COPY src ./src

# Build application
RUN sh mvnw clean package -DskipTests

# Runtime stage
FROM artifacts-artefacts.devops.cloud-nuage.canada.ca/docker-chainguard-remote/ssc-spc.gc.ca/jre:openjdk-24.0.1

WORKDIR /app

# Copy built artifact from builder stage
COPY --from=builder /app/target/secure-artifacts-demo-1.0.0.jar app.jar

# Chainguard images already run as non-root
EXPOSE 8080

CMD ["java", "-jar", "app.jar"]